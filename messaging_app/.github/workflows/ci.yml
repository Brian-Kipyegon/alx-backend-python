name: Django CI

on:
  push:
    paths:
      - 'messaging_app/**'
  pull_request:
    paths:
      - 'messaging_app/**'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: test_db
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_NAME: test_db
      DB_USER: testuser
      DB_PASSWORD: testpass

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r messaging_app/requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL..."
          for i in {1..30}; do
            nc -z 127.0.0.1 3306 && echo "MySQL is up!" && break
            sleep 2
          done

      - name: Run tests
        run: |
          cd messaging_app
          python manage.py migrate
          python manage.py test

      - name: Lint with flake8
        run: |
          pip install flake8
          # Lint the app and fail on any error
          flake8 messaging_app

      - name: Run tests with coverage
        run: |
          pip install coverage
          cd messaging_app
          coverage run manage.py test
          coverage report
          coverage html -d coverage_html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: messaging_app/coverage_html/

